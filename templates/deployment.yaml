apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-user-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-user-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-user-mongo
    spec:
      containers:
      - name: ts-user-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"       
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-auth-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-auth-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-auth-mongo
    spec:
      containers:
      - name: ts-auth-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-route-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-route-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-route-mongo
    spec:
      containers:
      - name: ts-route-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-contacts-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-contacts-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-contacts-mongo
    spec:
      containers:
      - name: ts-contacts-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-order-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-mongo
    spec:
      containers:
      - name: ts-order-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-other-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-order-other-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-other-mongo
    spec:
      containers:
      - name: ts-order-other-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-config-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-config-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-config-mongo
    spec:
      containers:
      - name: ts-config-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-station-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-station-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-mongo
    spec:
      containers:
      - name: ts-station-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-train-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-train-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-mongo
    spec:
      containers:
      - name: ts-train-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel-mongo
    spec:
      containers:
      - name: ts-travel-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel2-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel2-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel2-mongo
    spec:
      containers:
      - name: ts-travel2-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-price-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-price-mongo
    spec:
      containers:
      - name: ts-price-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-security-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-security-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-security-mongo
    spec:
      containers:
      - name: ts-security-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-inside-payment-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-inside-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-inside-payment-mongo
    spec:
      containers:
      - name: ts-inside-payment-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-payment-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-payment-mongo
    spec:
      containers:
      - name: ts-payment-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-assurance-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-assurance-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-assurance-mongo
    spec:
      containers:
      - name: ts-assurance-mongo
        image: mongo:latest
        imagePullPolicy: IfNotPresent
        command:
        - "mongod"
        - "--bind_ip"
        - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ticket-office-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-ticket-office-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ticket-office-mongo
    spec:
      containers:
      - name: ts-ticket-office-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-voucher-mysql
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-voucher-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-voucher-mysql
    spec:
      containers:
      - name: ts-voucher-mysql
        image: mysql:5.6.35
        imagePullPolicy: IfNotPresent      
        env:
        # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: root
        ports:
        - containerPort: 3306

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-map-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-map-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-map-mongo
    spec:
      containers:
      - name: ts-food-map-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-mongo
    spec:
      containers:
      - name: ts-consign-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-price-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-price-mongo
    spec:
      containers:
      - name: ts-consign-price-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-mongo
    spec:
      containers:
      - name: ts-food-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-user-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-user-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-user-mongo
    spec:
      containers:
      - name: ts-user-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"       
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-auth-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-auth-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-auth-mongo
    spec:
      containers:
      - name: ts-auth-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-route-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-route-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-route-mongo
    spec:
      containers:
      - name: ts-route-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-contacts-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-contacts-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-contacts-mongo
    spec:
      containers:
      - name: ts-contacts-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-order-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-mongo
    spec:
      containers:
      - name: ts-order-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-order-other-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-order-other-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-order-other-mongo
    spec:
      containers:
      - name: ts-order-other-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-config-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-config-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-config-mongo
    spec:
      containers:
      - name: ts-config-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-station-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-station-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-station-mongo
    spec:
      containers:
      - name: ts-station-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-train-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-train-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-train-mongo
    spec:
      containers:
      - name: ts-train-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel-mongo
    spec:
      containers:
      - name: ts-travel-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-travel2-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-travel2-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-travel2-mongo
    spec:
      containers:
      - name: ts-travel2-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-price-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-price-mongo
    spec:
      containers:
      - name: ts-price-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-security-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-security-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-security-mongo
    spec:
      containers:
      - name: ts-security-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-inside-payment-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-inside-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-inside-payment-mongo
    spec:
      containers:
      - name: ts-inside-payment-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-payment-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-payment-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-payment-mongo
    spec:
      containers:
      - name: ts-payment-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-assurance-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-assurance-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-assurance-mongo
    spec:
      containers:
      - name: ts-assurance-mongo
        image: mongo:latest
        imagePullPolicy: IfNotPresent
        command:
        - "mongod"
        - "--bind_ip"
        - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ticket-office-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-ticket-office-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ticket-office-mongo
    spec:
      containers:
      - name: ts-ticket-office-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-voucher-mysql
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-voucher-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-voucher-mysql
    spec:
      containers:
      - name: ts-voucher-mysql
        image: mysql:5.6.35
        imagePullPolicy: IfNotPresent      
        env:
        # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: root
        ports:
        - containerPort: 3306

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-map-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-map-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-map-mongo
    spec:
      containers:
      - name: ts-food-map-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-mongo
    spec:
      containers:
      - name: ts-consign-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-consign-price-mongo
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-consign-price-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-consign-price-mongo
    spec:
      containers:
      - name: ts-consign-price-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-food-vs
  namespace: train-mongo
spec:
  selector:
    matchLabels:
      app: ts-food-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-food-mongo
    spec:
      containers:
      - name: ts-food-mongo
        image: $REGISTRY_HOST/mongo
        imagePullPolicy: IfNotPresent
        command:
          - "mongod"
          - "--bind_ip"
          - "0.0.0.0"        
        ports:
        - containerPort: 27017
---
apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-admin-basic-info-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-admin-basic-info-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-admin-basic-info-service

    spec:

      containers:

      - name: ts-admin-basic-info-service

        image: $REGISTRY_HOST/ts-admin-basic-info-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 18767

        readinessProbe:

          tcpSocket:

            port: 18767

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5   

---





apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-admin-order-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-admin-order-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-admin-order-service

    spec:

      containers:

      - name: ts-admin-order-service

        image: $REGISTRY_HOST/ts-admin-order-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16112

        readinessProbe:

          tcpSocket:

            port: 16112

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-admin-route-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-admin-route-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-admin-route-service

    spec:

      containers:

      - name: ts-admin-route-service

        image: $REGISTRY_HOST/ts-admin-route-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16113

        readinessProbe:

          tcpSocket:

            port: 16113

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-admin-travel-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-admin-travel-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-admin-travel-service

    spec:

      containers:

      - name: ts-admin-travel-service

        image: $REGISTRY_HOST/ts-admin-travel-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16114

        readinessProbe:

          tcpSocket:

            port: 16114

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-admin-user-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-admin-user-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-admin-user-service

    spec:

      containers:

      - name: ts-admin-user-service

        image: $REGISTRY_HOST/ts-admin-user-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16115

        readinessProbe:

          tcpSocket:

            port: 16115

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-assurance-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-assurance-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-assurance-service

    spec:

      containers:

      - name: ts-assurance-service

        image: $REGISTRY_HOST/ts-assurance-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 18888

        readinessProbe:

          tcpSocket:

            port: 18888

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-basic-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-basic-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-basic-service

    spec:

      containers:

      - name: ts-basic-service

        image: $REGISTRY_HOST/ts-basic-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 15680

        readinessProbe:

          tcpSocket:

            port: 15680

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-cancel-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-cancel-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-cancel-service

    spec:

      containers:

      - name: ts-cancel-service

        image: $REGISTRY_HOST/ts-cancel-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 18885

        readinessProbe:

          tcpSocket:

            port: 18885

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-config-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-config-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-config-service

    spec:

      containers:

      - name: ts-config-service

        image: $REGISTRY_HOST/ts-config-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 15679

        readinessProbe:

          tcpSocket:

            port: 15679

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-consign-price-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-consign-price-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-consign-price-service

    spec:

      containers:

      - name: ts-consign-price-service

        image: $REGISTRY_HOST/ts-consign-price-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16110

        readinessProbe:

          tcpSocket:

            port: 16110

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-consign-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-consign-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-consign-service

    spec:

      containers:

      - name: ts-consign-service

        image: $REGISTRY_HOST/ts-consign-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16111

        readinessProbe:

          tcpSocket:

            port: 16111

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-contacts-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-contacts-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-contacts-service

    spec:

      containers:

      - name: ts-contacts-service

        image: $REGISTRY_HOST/ts-contacts-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12347

        readinessProbe:

          tcpSocket:

            port: 12347

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-execute-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-execute-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-execute-service

    spec:

      containers:

      - name: ts-execute-service

        image: $REGISTRY_HOST/ts-execute-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12386

        readinessProbe:

          tcpSocket:

            port: 12386

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-food-map-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-food-map-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-food-map-service

    spec:

      containers:

      - name: ts-food-map-service

        image: $REGISTRY_HOST/ts-food-map-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 18855

        readinessProbe:

          tcpSocket:

            port: 18855

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-food-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-food-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-food-service

    spec:

      containers:

      - name: ts-food-service

        image: $REGISTRY_HOST/ts-food-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 18856

        readinessProbe:

          tcpSocket:

            port: 18856

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-inside-payment-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-inside-payment-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-inside-payment-service

    spec:

      containers:

      - name: ts-inside-payment-service

        image: $REGISTRY_HOST/ts-inside-payment-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 18673

        readinessProbe:

          tcpSocket:

            port: 18673

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-auth-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-auth-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-auth-service

    spec:

      containers:

      - name: ts-auth-service

        image: $REGISTRY_HOST/ts-auth-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12340

        readinessProbe:

          tcpSocket:

            port: 12340

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-news-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-news-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-news-service

    spec:

      containers:

      - name: ts-news-service

        image: $REGISTRY_HOST/ts-news-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12862

        readinessProbe:

          tcpSocket:

            port: 12862

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-notification-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-notification-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-notification-service

    spec:

      containers:

      - name: ts-notification-service

        image: $REGISTRY_HOST/ts-notification-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 17853

        readinessProbe:

          tcpSocket:

            port: 17853

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-order-other-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-order-other-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-order-other-service

    spec:

      containers:

      - name: ts-order-other-service

        image: $REGISTRY_HOST/ts-order-other-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12032

        readinessProbe:

          tcpSocket:

            port: 12032

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-order-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-order-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-order-service

    spec:

      containers:

      - name: ts-order-service

        image: $REGISTRY_HOST/ts-order-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12031

        readinessProbe:

          tcpSocket:

            port: 12031

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-payment-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-payment-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-payment-service

    spec:

      containers:

      - name: ts-payment-service

        image: $REGISTRY_HOST/ts-payment-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 19001

        readinessProbe:

          tcpSocket:

            port: 19001

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-preserve-other-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-preserve-other-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-preserve-other-service

    spec:

      containers:

      - name: ts-preserve-other-service

        image: $REGISTRY_HOST/ts-preserve-other-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 14569

        readinessProbe:

          tcpSocket:

            port: 14569

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-preserve-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-preserve-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-preserve-service

    spec:

      containers:

      - name: ts-preserve-service

        image: $REGISTRY_HOST/ts-preserve-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 14568

        readinessProbe:

          tcpSocket:

            port: 14568

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-price-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-price-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-price-service

    spec:

      containers:

      - name: ts-price-service

        image: $REGISTRY_HOST/ts-price-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16579

        readinessProbe:

          tcpSocket:

            port: 16579

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-rebook-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-rebook-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-rebook-service

    spec:

      containers:

      - name: ts-rebook-service

        image: $REGISTRY_HOST/ts-rebook-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 18886

        readinessProbe:

          tcpSocket:

            port: 18886

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-route-plan-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-route-plan-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-route-plan-service

    spec:

      containers:

      - name: ts-route-plan-service

        image: $REGISTRY_HOST/ts-route-plan-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 14578

        readinessProbe:

          tcpSocket:

            port: 14578

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-route-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-route-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-route-service

    spec:

      containers:

      - name: ts-route-service

        image: $REGISTRY_HOST/ts-route-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 11178

        readinessProbe:

          tcpSocket:

            port: 11178

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-seat-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-seat-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-seat-service

    spec:

      containers:

      - name: ts-seat-service

        image: $REGISTRY_HOST/ts-seat-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 18898

        readinessProbe:

          tcpSocket:

            port: 18898

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-security-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-security-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-security-service

    spec:

      containers:

      - name: ts-security-service

        image: $REGISTRY_HOST/ts-security-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 11188

        readinessProbe:

          tcpSocket:

            port: 11188

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-user-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-user-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-user-service

    spec:

      containers:

      - name: ts-user-service

        image: $REGISTRY_HOST/ts-user-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12342

        readinessProbe:

          tcpSocket:

            port: 12342

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-station-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-station-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-station-service

    spec:

      containers:

      - name: ts-station-service

        image: $REGISTRY_HOST/ts-station-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12345

        readinessProbe:

          tcpSocket:

            port: 12345

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-ticket-office-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-ticket-office-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-ticket-office-service 

    spec:

      containers:

      - name: ts-ticket-office-service

        image: $REGISTRY_HOST/ts-ticket-office-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16108

        readinessProbe:

          tcpSocket:

            port: 16108

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-ticketinfo-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-ticketinfo-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-ticketinfo-service

    spec:

      containers:

      - name: ts-ticketinfo-service

        image: $REGISTRY_HOST/ts-ticketinfo-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 15681

        readinessProbe:

          tcpSocket:

            port: 15681

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-train-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-train-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-train-service

    spec:

      containers:

      - name: ts-train-service

        image: $REGISTRY_HOST/ts-train-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 14567

        readinessProbe:

          tcpSocket:

            port: 14567

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-travel2-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-travel2-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-travel2-service

    spec:

      containers:

      - name: ts-travel2-service

        image: $REGISTRY_HOST/ts-travel2-service:latest

        ports:

        - containerPort: 16346

        readinessProbe:

          tcpSocket:

            port: 16346

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-travel-plan-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-travel-plan-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-travel-plan-service

    spec:

      containers:

      - name: ts-travel-plan-service

        image: $REGISTRY_HOST/ts-travel-plan-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 14322

        readinessProbe:

          tcpSocket:

            port: 14322

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-travel-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-travel-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-travel-service

    spec:

      containers:

      - name: ts-travel-service

        image: $REGISTRY_HOST/ts-travel-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 12346

        readinessProbe:

          tcpSocket:

            port: 12346

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-verification-code-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-verification-code-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-verification-code-service

    spec:

      containers:

      - name: ts-verification-code-service

        image: $REGISTRY_HOST/ts-verification-code-service:0.1.0

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 15678

        readinessProbe:

          tcpSocket:

            port: 15678

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5

---



apiVersion: apps/v1

kind: Deployment

metadata:

  name: ts-voucher-service

  namespace: train-app

spec:

  selector:

    matchLabels:

      app: ts-voucher-service

  replicas: 1

  template:

    metadata:

      labels:

        app: ts-voucher-service

    spec:

      containers:

      - name: ts-voucher-service

        image: $REGISTRY_HOST/ts-voucher-service:latest

        imagePullPolicy: IfNotPresent

        ports:

        - containerPort: 16101

        readinessProbe:

          tcpSocket:

            port: 16101

          initialDelaySeconds: 160

          periodSeconds: 10

          timeoutSeconds: 5 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-ui-dashboard
  namespace: train-app
spec:
  selector:
    matchLabels:
      app: ts-ui-dashboard
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-ui-dashboard
    spec:
      containers:
      - name: ts-ui-dashboard
        image: $REGISTRY_HOST/ts-ui-dashboard:$BUILD_NUMBER
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ts-avatar-service
  namespace: train-app
spec:
  selector:
    matchLabels:
      app: ts-avatar-service
  replicas: 1
  template:
    metadata:
      labels:
        app: ts-avatar-service
    spec:
      containers:
      - name: ts-avatar-service
        image: $REGISTRY_HOST/ts-avatar-service:0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 17001
        readinessProbe:
          tcpSocket:
            port: 17001
          initialDelaySeconds: 160
          periodSeconds: 10
          timeoutSeconds: 5

